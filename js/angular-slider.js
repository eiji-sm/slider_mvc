// Generated by CoffeeScript 1.6.1
var demoData, mainCtrl, numberManager, slider;

slider = angular.module('slider', []);

/* load modules
  @codekit-append "demodata.coffee"
  @codekit-append "angular-app/common.coffee"
  @codekit-append "angular-app/controller/main_controller.coffee"
*/


/* --------------------------------------------
     Begin demodata.coffee
--------------------------------------------
*/


demoData = [
  {
    url: 'slide_content_01.jpg',
    title: 'jQuery',
    description: 'jQuery is a fast, small, and feature-rich JavaScript library. It makes things like HTML document traversal and manipulation, event handling, animation, and Ajax much simpler with an easy-to-use API that works across a multitude of browsers. With a combination of versatility and extensibility, jQuery has changed the way that millions of people write JavaScript.'
  }, {
    url: 'slide_content_02.jpg',
    title: 'AngularJS',
    description: 'HTML is great for declaring static documents, but it falters when we try to use it for declaring dynamic views in web-applications. AngularJS lets you extend HTML vocabulary for your application. The resulting environment is extraordinarily expressive, readable, and quick to develop.'
  }, {
    url: 'slide_content_03.jpg',
    title: 'BACKBONE.JS',
    description: 'Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface.'
  }, {
    url: 'slide_content_04.jpg',
    title: 'Spine.js',
    description: 'Spine is a lightweight framework for building JavaScript web applications. Spine gives you an MVC structure and then gets out of your way, allowing you to concentrate on the fun stuff, building awesome web applications.'
  }, {
    url: 'slide_content_05.jpg',
    title: 'Flight.js',
    description: 'Flight is a lightweight, component-based JavaScript framework that maps behavior to DOM nodes. Twitter uses it for their web applications. By way of example, we\'ve included a simple email client demo (browse the source) built over the Flight framework.'
  }
];

/* --------------------------------------------
     Begin common.coffee
--------------------------------------------
*/


numberManager = (function() {
  var isMutable;

  isMutable = true;

  numberManager.prototype.val = 0;

  function numberManager(mutable) {
    if (mutable == null) {
      mutable = true;
    }
    isMutable = mutable;
  }

  numberManager.prototype.lock = function() {
    return isMutable = false;
  };

  numberManager.prototype.unlock = function() {
    return isMutable = true;
  };

  numberManager.prototype.increase = function(number) {
    if (number == null) {
      number = 1;
    }
    if (isMutable) {
      return this.val += number;
    }
  };

  numberManager.prototype.decrease = function(number) {
    if (number == null) {
      number = 1;
    }
    if (isMutable) {
      return this.val -= number;
    }
  };

  numberManager.prototype.set = function(number) {
    if (isMutable) {
      return this.val = number;
    }
  };

  return numberManager;

})();

/* --------------------------------------------
     Begin main_controller.coffee
--------------------------------------------
*/


slider.controller('mainCtrl', mainCtrl = function($scope, $rootElement, $http, $location) {
  var _i, _ref, _results;
  $scope.slideNumber = new numberManager;
  $scope.dataList = demoData;
  $scope.dataLength = $scope.dataList.length - 1;
  $scope.dataNumbers = (function() {
    _results = [];
    for (var _i = 0, _ref = $scope.dataLength; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
    return _results;
  }).apply(this);
  $location.url($scope.dataList[$scope.slideNumber.val].title);
  $scope.slide = function(toContent) {
    var _anamateOptions, _animateStyles, _slideWidth;
    $scope.slideNumber.lock();
    _slideWidth = $('.slideContent', $rootElement).width();
    _animateStyles = {
      marginLeft: "-" + (_slideWidth * toContent) + "px"
    };
    _anamateOptions = {
      duration: 'normal',
      easing: 'swing',
      complete: function() {
        $scope.slideNumber.unlock();
        $location.path($scope.dataList[$scope.slideNumber.val].title);
        return $scope.$apply();
      }
    };
    return $('.slideContainer', $rootElement).animate(_animateStyles, _anamateOptions);
  };
  return $scope.$watch('slideNumber.val', function(newVal, oldVal) {
    if (newVal === oldVal) {
      return;
    }
    return $scope.slide(newVal);
  });
});
